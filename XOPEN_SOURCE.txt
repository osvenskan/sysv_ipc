
On OpenSolaris problems start with prober. None of the test programs compile because gcc fails like so:

/usr/include/sys/feature_tests.h:357:2: #error "Compiler or options invalid; UNIX 03 and POSIX.1-2001 applications      require the use of c99"

If I remove this from probe_page_size.c, the problem disappears:
#define _XOPEN_SOURCE 600


I've read on the Net suggestions that 


http://www.cims.nyu.edu/cgi-comment/man.cgi?section=5&topic=standards


_XOPEN_SOURCE=500 gives me SUSv2  standards


cc -Wall -I/usr/include/python2.5 -o foo  

cc -E -Wall -I/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5 key_test.c

gcc -fno-strict-aliasing -Wno-long-double -no-cpp-precomp -mno-fused-madd -fno-common -dynamic -DNDEBUG -g -O3 -Wall -Wstrict-prototypes -I/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5 -E key_test.c


When I run setup under OS X, it compiles with this include path for pyconfig.h:
/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5

That pyconfig doesn't have _XOPEN_SOURCE #defined. As a result I get the old version of ipc_perm from sys/ipc.h. That's problem #1, because that header file says explicitly that it's deprecated. It's the old version of ipc_perm that contains "key" (no underscores).


__DARWIN_UNIX03

Problem #2 is that for some reason prober finds the version of ipc_perm containing "_key". That's the new struct, so that's good, but it's not what setup.py finds, so that's bad. 

I can get around this by not using key/_key/__key anymore which is probably wise since it's non-standard. But all that does is gloss over the fact that the Python config isn't the same for my main module and the prober test programs which is a recipe for trouble. 

pyconfig.h lives in the following locations:

./Library/Frameworks/Python.framework/Versions/2.5/include/python2.5/
./System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5/
./usr/local/src/Python-2.5.1/



